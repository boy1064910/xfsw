<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
 xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

<!-- 	<context:property-placeholder location="classpath*:conf/${environment}/config.properties" /> -->
	
	<bean id="accountDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://${account.jdbc.host}:${account.jdbc.port}/${account.jdbc.database}?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="user" value="${account.jdbc.username}" />
		<property name="password" value="${account.jdbc.password}" />
		<property name="acquireIncrement" value="1" />
		<property name="initialPoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="minPoolSize" value="5" />
		<property name="maxStatements" value="100" />
		<property name="testConnectionOnCheckout" value="true" />
	</bean>

	<bean id="accountSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="accountDataSource" />
		<property name="configLocation" value="classpath:spring/mybatis-account.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath*:mapper/mapper-common.xml</value>
				<value>classpath*:mapper/mapper-account-*.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="accountSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg ref="accountSqlSessionFactory" />
	</bean>
	
	<bean id="accountCommonMapper" class="com.xfsw.common.mapper.CommonMapper">
		<constructor-arg ref="accountSqlSessionTemplate"></constructor-arg>
	</bean>

	<!-- transaction support -->
	<!-- PlatformTransactionMnager -->
	<bean id="accountTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="accountDataSource" />
	</bean>
	
	<!-- 注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="accountTxManager" />
	
	<!-- redis连接池 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
	</bean>
	<!-- Redis Connection Factory -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="password" value="${redis.password}" />
		<property name="database" value="${redis.database}"></property>
	</bean>
	<!-- Redis Template -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
		</property>
		<property name="valueSerializer">  
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
        </property>
	</bean>

	<!-- 扫描包 -->
	<context:annotation-config />
	<context:component-scan base-package="com.xfsw.universe.service" />
</beans>
